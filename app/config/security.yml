#security:
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#
#    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#
#    firewalls:
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
#            #anonymous: ~
#            #http_basic:
#            #    realm: "Secured Demo Area"
#
#    access_control:
#        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
#        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }



security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
        my_fos_facebook_provider:
#            id: my.facebook.user   # see "Example Custom User Provider using the FOS\UserBundle" chapter further down
            memory:
                users:
                    ryan:  { password: ryanpass, roles: 'ROLE_USER' }
                    admin: { password: kitten, roles: 'ROLE_ADMIN' }

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
            logout:       true
            anonymous:    true
        public:
            # since anonymous is allowed users will not be forced to login
            pattern:   ^/.*
            fos_facebook:
                app_url: "http://apps.facebook.com/appName/"
                server_url: "http://localhost/facebookApp/"
                login_path: /login
                check_path: /login_check
                default_target_path: /
                provider: my_fos_facebook_provider
            anonymous: true
#        secured_area:
#            anonymous: ~
#            oauth:
#                resource_owners:
##                    facebook:           "/login/check-facebook"
#                    google:             "/login/check-google"
##                    my_custom_provider: "/login/check-custom"
##                    my_github:          "/login/check-github"
#                login_path:        /login
#                failure_path:      /login
#                oauth_user_provider:
#                    service: my.oauth_aware.user_provider.service

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: /new, role: ROLE_SUPER_ADMIN }
        - { path: /edit, role: ROLE_SUPER_ADMIN }
        - { path: /delete, role: ROLE_SUPER_ADMIN }

        - { path: ^/secured/.*, role: [IS_AUTHENTICATED_FULLY] } # This is the route secured with fos_facebook
        - { path: ^/facebook/,  role: [ROLE_FACEBOOK] }
        - { path: ^/.*,         role: [IS_AUTHENTICATED_ANONYMOUSLY] }

    acl:
            connection: default